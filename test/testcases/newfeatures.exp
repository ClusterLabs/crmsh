.TRY New features
.INP: configure
.INP: # erase to start from scratch
.INP: erase
.INP: erase nodes
.INP: node node1
.INP: # create one stonith so that verify does not complain
.INP: primitive st stonith:ssh 	hostlist='node1' 	meta target-role="Started" 	op start requires=nothing timeout=60s 	op monitor interval=60m timeout=60s
.INP: primitive p0 Dummy $p0-state:state=1
.INP: primitive p1 Dummy     rule role=Started date in start=2009-05-26 end=2010-05-26 or date gt 2014-01-01     state=2
.INP: primitive p2 Dummy @p0-state
nvpair_ref: 'p0-state' None
nvpair_ref: 'p0-state' None
.INP: property rule #uname eq node1 stonith-enabled=no
.INP: tag tag1: p0 p1 p2
.INP: tag tag2 p0 p1 p2
.INP: location l1 { p0 p1 p2 } inf: node1
.INP: show
node node1
primitive p0 Dummy \
	state=1
primitive p1 Dummy \
	rule $role=Started date in start=2009-05-26 end=2010-05-26 or date gt 2014-01-01 state=2
primitive p2 Dummy \
	@p0-state
primitive st stonith:ssh \
	hostlist=node1 \
	meta target-role=Started \
	op start requires=nothing timeout=60s interval=0 \
	op monitor interval=60m timeout=60s
tag tag1 p0 p1 p2
tag tag2 p0 p1 p2
location l1 { p0 p1 p2 } inf: node1
property cib-bootstrap-options: \
	rule #uname eq node1 \
	stonith-enabled=no
.INP: _test
.INP: verify
.EXT crm_resource --show-metadata stonith:ssh
.EXT stonithd metadata
.EXT crm_resource --show-metadata ocf:heartbeat:Dummy
.EXT crmd metadata
.EXT pengine metadata
.EXT cib metadata
.INP: commit
nvpair_ref: 'p0-state' None
